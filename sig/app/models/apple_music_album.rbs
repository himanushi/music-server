class AppleMusicAlbum < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[AppleMusicAlbum, AppleMusicAlbum::ActiveRecord_Relation]

  attr_accessor id (): String
  attr_accessor created_at (): Time
  attr_accessor updated_at (): Time
  attr_accessor album_id (): String
  attr_accessor apple_music_id (): String
  attr_accessor name (): String
  attr_accessor status (): String # enum なので Integer ではなく String
  attr_accessor playable (): TrueClass | FalseClass
  attr_accessor release_date (): Time
  attr_accessor total_tracks (): Integer
  attr_accessor record_label (): String
  attr_accessor copyright (): String
  attr_accessor artwork_url (): String
  attr_accessor artwork_width (): Integer
  attr_accessor artwork_height (): Integer
  attr_accessor compacted_id (): String
  def apple_music_tracks: () -> AppleMusicTrack::ActiveRecord_Associations_CollectionProxy

  def album: () -> Album
  def pending!: () -> bool
  def pending?: () -> bool
  def active!: () -> bool
  def active?: () -> bool
  def ignore!: () -> bool
  def ignore?: () -> bool
  def self.pending: () -> AppleMusicAlbum::ActiveRecord_Relation
  def self.active: () -> AppleMusicAlbum::ActiveRecord_Relation
  def self.ignore: () -> AppleMusicAlbum::ActiveRecord_Relation

  # rbs prototype rb app/models/apple_music_album.rb

  include MusicServiceCreatable

  include Albums::Compact

  def self.music_service_id_name: () -> "apple_music_id"

  def self.mapping: ({
    "id" => String,
    "attributes" => {
      "id" => String,
      "releaseDate" => String,
      "trackCount" => Integer,
      "name" => String,
      "recordLabel" => String,
      "copyright" => String?,
      "playParams" => untyped?,
      "artwork" => {
        "url" => String,
        "width" => Integer,
        "height" => Integer
      }
    },
    "relationships" => {
      "tracks" => {
        "data" => Array[untyped]
      },
      "artists" => {
        "data" => Array[{
          "id" => String
        }]
      }
    }
  } data) -> Hash[Symbol, untyped]

  def self.to_album_attrs: ({
    "id" => String,
    "attributes" => {
      "id" => String,
      "releaseDate" => String,
      "trackCount" => Integer,
      "name" => String,
      "recordLabel" => String,
      "copyright" => String?,
      "playParams" => untyped?,
      "artwork" => {
        "url" => String,
        "width" => Integer,
        "height" => Integer
      }
    },
    "relationships" => {
      "tracks" => {
        "data" => Array[untyped]
      },
      "artists" => {
        "data" => Array[{
          "id" => String
        }]
      }
    }
  } data) -> untyped # なぜか設定できなかったのでいつか型設定する

  def self.create_by_music_service_id: (String apple_music_id) -> (nil | AppleMusicAlbum)

  # トラックのISRC1件でアルバム特定し生成する
  def self.create_by_track_isrc: (String isrc) -> Array[AppleMusicAlbum]

  def music_service_id: () -> String

  def artwork_l: () -> Artwork

  def artwork_m: () -> Artwork

  def build_artwork: (Integer max_size) -> Artwork

  def sync_status_apple_music_tracks: () -> void
end

class AppleMusicAlbum::ActiveRecord_Relation < ::ActiveRecord::Relation
  include _ActiveRecord_Relation[AppleMusicAlbum]
  include Enumerable[AppleMusicAlbum, self]
  def pending: () -> AppleMusicAlbum::ActiveRecord_Relation
  def active: () -> AppleMusicAlbum::ActiveRecord_Relation
  def ignore: () -> AppleMusicAlbum::ActiveRecord_Relation

end

class AppleMusicAlbum::ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
  include AppleMusicAlbum::ActiveRecord_Relation
end
