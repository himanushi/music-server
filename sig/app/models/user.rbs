class User < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[User, User::ActiveRecord_Relation]

  attr_accessor id (): String
  def id_changed?: () -> bool
  def id_change: () -> [String?, String?]
  def id_will_change!: () -> void
  def id_was: () -> String?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[String?]?
  def id_previously_was: () -> String?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor created_at (): Time
  def created_at_changed?: () -> bool
  def created_at_change: () -> [Time?, Time?]
  def created_at_will_change!: () -> void
  def created_at_was: () -> Time?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[Time?]?
  def created_at_previously_was: () -> Time?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at (): Time
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [Time?, Time?]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> Time?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[Time?]?
  def updated_at_previously_was: () -> Time?
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor status (): Integer
  def status_changed?: () -> bool
  def status_change: () -> [Integer?, Integer?]
  def status_will_change!: () -> void
  def status_was: () -> Integer?
  def status_previously_changed?: () -> bool
  def status_previous_change: () -> Array[Integer?]?
  def status_previously_was: () -> Integer?
  def restore_status!: () -> void
  def clear_status_change: () -> void

  attr_accessor name (): String
  def name_changed?: () -> bool
  def name_change: () -> [String?, String?]
  def name_will_change!: () -> void
  def name_was: () -> String?
  def name_previously_changed?: () -> bool
  def name_previous_change: () -> Array[String?]?
  def name_previously_was: () -> String?
  def restore_name!: () -> void
  def clear_name_change: () -> void

  attr_accessor username (): String
  def username_changed?: () -> bool
  def username_change: () -> [String?, String?]
  def username_will_change!: () -> void
  def username_was: () -> String?
  def username_previously_changed?: () -> bool
  def username_previous_change: () -> Array[String?]?
  def username_previously_was: () -> String?
  def restore_username!: () -> void
  def clear_username_change: () -> void

  attr_accessor encrypted_password (): String?
  def encrypted_password_changed?: () -> bool
  def encrypted_password_change: () -> [String?, String?]
  def encrypted_password_will_change!: () -> void
  def encrypted_password_was: () -> String?
  def encrypted_password_previously_changed?: () -> bool
  def encrypted_password_previous_change: () -> Array[String?]?
  def encrypted_password_previously_was: () -> String?
  def restore_encrypted_password!: () -> void
  def clear_encrypted_password_change: () -> void

  attr_accessor description (): String?
  def description_changed?: () -> bool
  def description_change: () -> [String?, String?]
  def description_will_change!: () -> void
  def description_was: () -> String?
  def description_previously_changed?: () -> bool
  def description_previous_change: () -> Array[String?]?
  def description_previously_was: () -> String?
  def restore_description!: () -> void
  def clear_description_change: () -> void

  attr_accessor album_id (): String?
  def album_id_changed?: () -> bool
  def album_id_change: () -> [String?, String?]
  def album_id_will_change!: () -> void
  def album_id_was: () -> String?
  def album_id_previously_changed?: () -> bool
  def album_id_previous_change: () -> Array[String?]?
  def album_id_previously_was: () -> String?
  def restore_album_id!: () -> void
  def clear_album_id_change: () -> void

  attr_accessor role_id (): String
  def role_id_changed?: () -> bool
  def role_id_change: () -> [String?, String?]
  def role_id_will_change!: () -> void
  def role_id_was: () -> String?
  def role_id_previously_changed?: () -> bool
  def role_id_previous_change: () -> Array[String?]?
  def role_id_previously_was: () -> String?
  def restore_role_id!: () -> void
  def clear_role_id_change: () -> void

  def sessions: () -> Session::ActiveRecord_Associations_CollectionProxy
  def public_informations: () -> PublicInformation::ActiveRecord_Associations_CollectionProxy

  def role: () -> Role
  def role=: (Role) -> Role

  # rbs prototype rb app/models/user.rb
  include Users::Favorite

  def self.create_user_and_session!: () -> User

  def can?: (String action_name) -> bool
end

class User::ActiveRecord_Relation < ActiveRecord::Relation
  include _ActiveRecord_Relation[User]
  include Enumerable[User, self]


end

class User::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
end
