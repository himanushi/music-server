class Favorite < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Favorite, Favorite::ActiveRecord_Relation]

  attr_accessor id (): String
  def id_changed?: () -> bool
  def id_change: () -> [String?, String?]
  def id_will_change!: () -> void
  def id_was: () -> String?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[String?]?
  def id_previously_was: () -> String?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor created_at (): Time
  def created_at_changed?: () -> bool
  def created_at_change: () -> [Time?, Time?]
  def created_at_will_change!: () -> void
  def created_at_was: () -> Time?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[Time?]?
  def created_at_previously_was: () -> Time?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at (): Time
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [Time?, Time?]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> Time?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[Time?]?
  def updated_at_previously_was: () -> Time?
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor user_id (): String
  def user_id_changed?: () -> bool
  def user_id_change: () -> [String?, String?]
  def user_id_will_change!: () -> void
  def user_id_was: () -> String?
  def user_id_previously_changed?: () -> bool
  def user_id_previous_change: () -> Array[String?]?
  def user_id_previously_was: () -> String?
  def restore_user_id!: () -> void
  def clear_user_id_change: () -> void

  attr_accessor favorable_id (): String
  def favorable_id_changed?: () -> bool
  def favorable_id_change: () -> [String?, String?]
  def favorable_id_will_change!: () -> void
  def favorable_id_was: () -> String?
  def favorable_id_previously_changed?: () -> bool
  def favorable_id_previous_change: () -> Array[String?]?
  def favorable_id_previously_was: () -> String?
  def restore_favorable_id!: () -> void
  def clear_favorable_id_change: () -> void

  attr_accessor favorable_type (): String
  def favorable_type_changed?: () -> bool
  def favorable_type_change: () -> [String?, String?]
  def favorable_type_will_change!: () -> void
  def favorable_type_was: () -> String?
  def favorable_type_previously_changed?: () -> bool
  def favorable_type_previous_change: () -> Array[String?]?
  def favorable_type_previously_was: () -> String?
  def restore_favorable_type!: () -> void
  def clear_favorable_type_change: () -> void



  def favorable: () -> untyped
  def user: () -> User

  # rbs prototype rb app/models/favorite.rb
  def self.register: (Array[ApplicationRecord] favorites, User user) -> void

  def self.unregister: (Array[ApplicationRecord] favorites, User user) -> void
end

class Favorite::ActiveRecord_Relation < ActiveRecord::Relation
  include _ActiveRecord_Relation[Favorite]
  include Enumerable[Favorite, self]


end

class Favorite::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
end
