class SpotifyArtist < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[SpotifyArtist, SpotifyArtist::ActiveRecord_Relation]

  attr_accessor id (): String
  def id_changed?: () -> bool
  def id_change: () -> [String?, String?]
  def id_will_change!: () -> void
  def id_was: () -> String?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[String?]?
  def id_previously_was: () -> String?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor created_at (): Time
  def created_at_changed?: () -> bool
  def created_at_change: () -> [Time?, Time?]
  def created_at_will_change!: () -> void
  def created_at_was: () -> Time?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[Time?]?
  def created_at_previously_was: () -> Time?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at (): Time
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [Time?, Time?]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> Time?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[Time?]?
  def updated_at_previously_was: () -> Time?
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor artist_id (): String
  def artist_id_changed?: () -> bool
  def artist_id_change: () -> [String?, String?]
  def artist_id_will_change!: () -> void
  def artist_id_was: () -> String?
  def artist_id_previously_changed?: () -> bool
  def artist_id_previous_change: () -> Array[String?]?
  def artist_id_previously_was: () -> String?
  def restore_artist_id!: () -> void
  def clear_artist_id_change: () -> void

  attr_accessor spotify_id (): String
  def spotify_id_changed?: () -> bool
  def spotify_id_change: () -> [String?, String?]
  def spotify_id_will_change!: () -> void
  def spotify_id_was: () -> String?
  def spotify_id_previously_changed?: () -> bool
  def spotify_id_previous_change: () -> Array[String?]?
  def spotify_id_previously_was: () -> String?
  def restore_spotify_id!: () -> void
  def clear_spotify_id_change: () -> void

  attr_accessor name (): String
  def name_changed?: () -> bool
  def name_change: () -> [String?, String?]
  def name_will_change!: () -> void
  def name_was: () -> String?
  def name_previously_changed?: () -> bool
  def name_previous_change: () -> Array[String?]?
  def name_previously_was: () -> String?
  def restore_name!: () -> void
  def clear_name_change: () -> void

  attr_accessor status (): Integer
  def status_changed?: () -> bool
  def status_change: () -> [Integer?, Integer?]
  def status_will_change!: () -> void
  def status_was: () -> Integer?
  def status_previously_changed?: () -> bool
  def status_previous_change: () -> Array[Integer?]?
  def status_previously_was: () -> Integer?
  def restore_status!: () -> void
  def clear_status_change: () -> void

  attr_accessor total_followers (): Integer
  def total_followers_changed?: () -> bool
  def total_followers_change: () -> [Integer?, Integer?]
  def total_followers_will_change!: () -> void
  def total_followers_was: () -> Integer?
  def total_followers_previously_changed?: () -> bool
  def total_followers_previous_change: () -> Array[Integer?]?
  def total_followers_previously_was: () -> Integer?
  def restore_total_followers!: () -> void
  def clear_total_followers_change: () -> void

  attr_accessor artwork_l_url (): String?
  def artwork_l_url_changed?: () -> bool
  def artwork_l_url_change: () -> [String?, String?]
  def artwork_l_url_will_change!: () -> void
  def artwork_l_url_was: () -> String?
  def artwork_l_url_previously_changed?: () -> bool
  def artwork_l_url_previous_change: () -> Array[String?]?
  def artwork_l_url_previously_was: () -> String?
  def restore_artwork_l_url!: () -> void
  def clear_artwork_l_url_change: () -> void

  attr_accessor artwork_l_width (): Integer?
  def artwork_l_width_changed?: () -> bool
  def artwork_l_width_change: () -> [Integer?, Integer?]
  def artwork_l_width_will_change!: () -> void
  def artwork_l_width_was: () -> Integer?
  def artwork_l_width_previously_changed?: () -> bool
  def artwork_l_width_previous_change: () -> Array[Integer?]?
  def artwork_l_width_previously_was: () -> Integer?
  def restore_artwork_l_width!: () -> void
  def clear_artwork_l_width_change: () -> void

  attr_accessor artwork_l_height (): Integer?
  def artwork_l_height_changed?: () -> bool
  def artwork_l_height_change: () -> [Integer?, Integer?]
  def artwork_l_height_will_change!: () -> void
  def artwork_l_height_was: () -> Integer?
  def artwork_l_height_previously_changed?: () -> bool
  def artwork_l_height_previous_change: () -> Array[Integer?]?
  def artwork_l_height_previously_was: () -> Integer?
  def restore_artwork_l_height!: () -> void
  def clear_artwork_l_height_change: () -> void

  attr_accessor artwork_m_url (): String?
  def artwork_m_url_changed?: () -> bool
  def artwork_m_url_change: () -> [String?, String?]
  def artwork_m_url_will_change!: () -> void
  def artwork_m_url_was: () -> String?
  def artwork_m_url_previously_changed?: () -> bool
  def artwork_m_url_previous_change: () -> Array[String?]?
  def artwork_m_url_previously_was: () -> String?
  def restore_artwork_m_url!: () -> void
  def clear_artwork_m_url_change: () -> void

  attr_accessor artwork_m_width (): Integer?
  def artwork_m_width_changed?: () -> bool
  def artwork_m_width_change: () -> [Integer?, Integer?]
  def artwork_m_width_will_change!: () -> void
  def artwork_m_width_was: () -> Integer?
  def artwork_m_width_previously_changed?: () -> bool
  def artwork_m_width_previous_change: () -> Array[Integer?]?
  def artwork_m_width_previously_was: () -> Integer?
  def restore_artwork_m_width!: () -> void
  def clear_artwork_m_width_change: () -> void

  attr_accessor artwork_m_height (): Integer?
  def artwork_m_height_changed?: () -> bool
  def artwork_m_height_change: () -> [Integer?, Integer?]
  def artwork_m_height_will_change!: () -> void
  def artwork_m_height_was: () -> Integer?
  def artwork_m_height_previously_changed?: () -> bool
  def artwork_m_height_previous_change: () -> Array[Integer?]?
  def artwork_m_height_previously_was: () -> Integer?
  def restore_artwork_m_height!: () -> void
  def clear_artwork_m_height_change: () -> void

  attr_accessor artwork_s_url (): String?
  def artwork_s_url_changed?: () -> bool
  def artwork_s_url_change: () -> [String?, String?]
  def artwork_s_url_will_change!: () -> void
  def artwork_s_url_was: () -> String?
  def artwork_s_url_previously_changed?: () -> bool
  def artwork_s_url_previous_change: () -> Array[String?]?
  def artwork_s_url_previously_was: () -> String?
  def restore_artwork_s_url!: () -> void
  def clear_artwork_s_url_change: () -> void

  attr_accessor artwork_s_width (): Integer?
  def artwork_s_width_changed?: () -> bool
  def artwork_s_width_change: () -> [Integer?, Integer?]
  def artwork_s_width_will_change!: () -> void
  def artwork_s_width_was: () -> Integer?
  def artwork_s_width_previously_changed?: () -> bool
  def artwork_s_width_previous_change: () -> Array[Integer?]?
  def artwork_s_width_previously_was: () -> Integer?
  def restore_artwork_s_width!: () -> void
  def clear_artwork_s_width_change: () -> void

  attr_accessor artwork_s_height (): Integer?
  def artwork_s_height_changed?: () -> bool
  def artwork_s_height_change: () -> [Integer?, Integer?]
  def artwork_s_height_will_change!: () -> void
  def artwork_s_height_was: () -> Integer?
  def artwork_s_height_previously_changed?: () -> bool
  def artwork_s_height_previous_change: () -> Array[Integer?]?
  def artwork_s_height_previously_was: () -> Integer?
  def restore_artwork_s_height!: () -> void
  def clear_artwork_s_height_change: () -> void

  attr_accessor popularity (): Integer
  def popularity_changed?: () -> bool
  def popularity_change: () -> [Integer?, Integer?]
  def popularity_will_change!: () -> void
  def popularity_was: () -> Integer?
  def popularity_previously_changed?: () -> bool
  def popularity_previous_change: () -> Array[Integer?]?
  def popularity_previously_was: () -> Integer?
  def restore_popularity!: () -> void
  def clear_popularity_change: () -> void

  def artist: () -> Artist
  def pending!: () -> bool
  def pending?: () -> bool
  def active!: () -> bool
  def active?: () -> bool
  def ignore!: () -> bool
  def ignore?: () -> bool
  def self.pending: () -> SpotifyArtist::ActiveRecord_Relation
  def self.active: () -> SpotifyArtist::ActiveRecord_Relation
  def self.ignore: () -> SpotifyArtist::ActiveRecord_Relation

  # rbs prototype rb app/models/spotify_artist.rb
  include MusicServiceCreatable
  extend MusicServiceCreatable::ClassMethods

  include SpotifyArtworkResizable

  def self.music_service_id_name: () -> "spotify_id"

  def self.mapping: ({
    "id" => String,
    "name" => String,
    "followers" => {
      "total" => Integer
    },
    "popularity" => Integer,
    "images" => Array[{
      "url" => String,
      "width" => Integer,
      "height" => Integer
    }]
  } data) -> {
    artist_id: String,
    spotify_id: String,
    name: String,
    total_followers: Integer,
    artwork_l_url: String?,
    artwork_l_width: Integer?,
    artwork_l_height: Integer?,
    artwork_m_url: String?,
    artwork_m_width: Integer?,
    artwork_m_height: Integer?,
    artwork_s_url: String?,
    artwork_s_width: Integer?,
    artwork_s_height: Integer?,
    popularity: Integer,
    status: String
  }

  def self.create_by_name: (String name) -> Array[SpotifyArtist]

  def self.create_by_music_service_id: (String spotify_id) -> (nil | SpotifyArtist)

  def music_service_id: () -> String

  def create_albums: () -> Array[SpotifyAlbum]

  def artwork_l: () -> Artwork

  def artwork_m: () -> Artwork
end

class SpotifyArtist::ActiveRecord_Relation < ActiveRecord::Relation
  include _ActiveRecord_Relation[SpotifyArtist]
  include Enumerable[SpotifyArtist, self]
  def pending: () -> SpotifyArtist::ActiveRecord_Relation
  def active: () -> SpotifyArtist::ActiveRecord_Relation
  def ignore: () -> SpotifyArtist::ActiveRecord_Relation

end

class SpotifyArtist::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
  include SpotifyArtist::ActiveRecord_Relation
end
