class PageViewLog < ::ActiveRecord::Base
  extend _ActiveRecord_Relation_ClassMethods[PageViewLog, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def path_location: () -> String

    def path_location=: (String) -> String

    def path_location?: () -> bool

    def path_location_changed?: () -> bool

    def path_location_change: () -> [ String?, String? ]

    def path_location_will_change!: () -> void

    def path_location_was: () -> String?

    def path_location_previously_changed?: () -> bool

    def path_location_previous_change: () -> Array[String?]?

    def path_location_previously_was: () -> String?

    def path_location_before_last_save: () -> String?

    def path_location_change_to_be_saved: () -> Array[String?]?

    def path_location_in_database: () -> String?

    def saved_change_to_path_location: () -> Array[String?]?

    def saved_change_to_path_location?: () -> bool

    def will_save_change_to_path_location?: () -> bool

    def restore_path_location!: () -> void

    def clear_path_location_change: () -> void

    def count: () -> Integer

    def count=: (Integer) -> Integer

    def count?: () -> bool

    def count_changed?: () -> bool

    def count_change: () -> [ Integer?, Integer? ]

    def count_will_change!: () -> void

    def count_was: () -> Integer?

    def count_previously_changed?: () -> bool

    def count_previous_change: () -> Array[Integer?]?

    def count_previously_was: () -> Integer?

    def count_before_last_save: () -> Integer?

    def count_change_to_be_saved: () -> Array[Integer?]?

    def count_in_database: () -> Integer?

    def saved_change_to_count: () -> Array[Integer?]?

    def saved_change_to_count?: () -> bool

    def will_save_change_to_count?: () -> bool

    def restore_count!: () -> void

    def clear_count_change: () -> void

    def target_date: () -> ActiveSupport::TimeWithZone?

    def target_date=: (ActiveSupport::TimeWithZone?) -> ActiveSupport::TimeWithZone?

    def target_date?: () -> bool

    def target_date_changed?: () -> bool

    def target_date_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def target_date_will_change!: () -> void

    def target_date_was: () -> ActiveSupport::TimeWithZone?

    def target_date_previously_changed?: () -> bool

    def target_date_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def target_date_previously_was: () -> ActiveSupport::TimeWithZone?

    def target_date_before_last_save: () -> ActiveSupport::TimeWithZone?

    def target_date_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def target_date_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_target_date: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_target_date?: () -> bool

    def will_save_change_to_target_date?: () -> bool

    def restore_target_date!: () -> void

    def clear_target_date_change: () -> void
  end
  include GeneratedAttributeMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PageViewLog, Integer]
    include Enumerable[PageViewLog]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PageViewLog, Integer]
  end
end
