class Role < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Role, ActiveRecord_Relation, String]

  attr_accessor id(): String
  def id_changed?: () -> bool
  def id_change: () -> [ String?, String? ]
  def id_will_change!: () -> void
  def id_was: () -> String?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[String?]?
  def id_previously_was: () -> String?
  def id_before_last_save: () -> String?
  def id_change_to_be_saved: () -> Array[String?]?
  def id_in_database: () -> String?
  def saved_change_to_id: () -> Array[String?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor name(): String
  def name_changed?: () -> bool
  def name_change: () -> [ String?, String? ]
  def name_will_change!: () -> void
  def name_was: () -> String?
  def name_previously_changed?: () -> bool
  def name_previous_change: () -> Array[String?]?
  def name_previously_was: () -> String?
  def name_before_last_save: () -> String?
  def name_change_to_be_saved: () -> Array[String?]?
  def name_in_database: () -> String?
  def saved_change_to_name: () -> Array[String?]?
  def saved_change_to_name?: () -> bool
  def will_save_change_to_name?: () -> bool
  def restore_name!: () -> void
  def clear_name_change: () -> void

  attr_accessor description(): String
  def description_changed?: () -> bool
  def description_change: () -> [ String?, String? ]
  def description_will_change!: () -> void
  def description_was: () -> String?
  def description_previously_changed?: () -> bool
  def description_previous_change: () -> Array[String?]?
  def description_previously_was: () -> String?
  def description_before_last_save: () -> String?
  def description_change_to_be_saved: () -> Array[String?]?
  def description_in_database: () -> String?
  def saved_change_to_description: () -> Array[String?]?
  def saved_change_to_description?: () -> bool
  def will_save_change_to_description?: () -> bool
  def restore_description!: () -> void
  def clear_description_change: () -> void

  def users: () -> User::ActiveRecord_Associations_CollectionProxy
  def users=: (User::ActiveRecord_Associations_CollectionProxy | Array[User]) -> (User::ActiveRecord_Associations_CollectionProxy | Array[User])
  def user_ids: () -> Array[Integer]
  def user_ids=: (Array[Integer]) -> Array[Integer]
  def allowed_actions: () -> AllowedAction::ActiveRecord_Associations_CollectionProxy
  def allowed_actions=: (AllowedAction::ActiveRecord_Associations_CollectionProxy | Array[AllowedAction]) -> (AllowedAction::ActiveRecord_Associations_CollectionProxy | Array[AllowedAction])
  def allowed_action_ids: () -> Array[Integer]
  def allowed_action_ids=: (Array[Integer]) -> Array[Integer]

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Role, String]
    include Enumerable[Role]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Role, String]
  end
end
