class PlaylistItem < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[PlaylistItem, ActiveRecord_Relation, String]

  attr_accessor id(): String
  def id_changed?: () -> bool
  def id_change: () -> [ String?, String? ]
  def id_will_change!: () -> void
  def id_was: () -> String?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[String?]?
  def id_previously_was: () -> String?
  def id_before_last_save: () -> String?
  def id_change_to_be_saved: () -> Array[String?]?
  def id_in_database: () -> String?
  def saved_change_to_id: () -> Array[String?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor playlist_id(): String?
  def playlist_id_changed?: () -> bool
  def playlist_id_change: () -> [ String?, String? ]
  def playlist_id_will_change!: () -> void
  def playlist_id_was: () -> String?
  def playlist_id_previously_changed?: () -> bool
  def playlist_id_previous_change: () -> Array[String?]?
  def playlist_id_previously_was: () -> String?
  def playlist_id_before_last_save: () -> String?
  def playlist_id_change_to_be_saved: () -> Array[String?]?
  def playlist_id_in_database: () -> String?
  def saved_change_to_playlist_id: () -> Array[String?]?
  def saved_change_to_playlist_id?: () -> bool
  def will_save_change_to_playlist_id?: () -> bool
  def restore_playlist_id!: () -> void
  def clear_playlist_id_change: () -> void

  attr_accessor track_id(): String
  def track_id_changed?: () -> bool
  def track_id_change: () -> [ String?, String? ]
  def track_id_will_change!: () -> void
  def track_id_was: () -> String?
  def track_id_previously_changed?: () -> bool
  def track_id_previous_change: () -> Array[String?]?
  def track_id_previously_was: () -> String?
  def track_id_before_last_save: () -> String?
  def track_id_change_to_be_saved: () -> Array[String?]?
  def track_id_in_database: () -> String?
  def saved_change_to_track_id: () -> Array[String?]?
  def saved_change_to_track_id?: () -> bool
  def will_save_change_to_track_id?: () -> bool
  def restore_track_id!: () -> void
  def clear_track_id_change: () -> void

  attr_accessor track_number(): Integer
  def track_number_changed?: () -> bool
  def track_number_change: () -> [ Integer?, Integer? ]
  def track_number_will_change!: () -> void
  def track_number_was: () -> Integer?
  def track_number_previously_changed?: () -> bool
  def track_number_previous_change: () -> Array[Integer?]?
  def track_number_previously_was: () -> Integer?
  def track_number_before_last_save: () -> Integer?
  def track_number_change_to_be_saved: () -> Array[Integer?]?
  def track_number_in_database: () -> Integer?
  def saved_change_to_track_number: () -> Array[Integer?]?
  def saved_change_to_track_number?: () -> bool
  def will_save_change_to_track_number?: () -> bool
  def restore_track_number!: () -> void
  def clear_track_number_change: () -> void

  def playlist: () -> Playlist
  def playlist=: (Playlist?) -> Playlist?
  def reload_playlist: () -> Playlist?
  def build_playlist: (untyped) -> Playlist
  def create_playlist: (untyped) -> Playlist
  def create_playlist!: (untyped) -> Playlist
  def track: () -> Track
  def track=: (Track?) -> Track?
  def reload_track: () -> Track?
  def build_track: (untyped) -> Track
  def create_track: (untyped) -> Track
  def create_track!: (untyped) -> Track

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PlaylistItem, String]
    include Enumerable[PlaylistItem]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[PlaylistItem, String]
  end
end
